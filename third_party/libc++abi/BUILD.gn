# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

config("libc++abi_warnings") {
  if (is_clang) {
    # http://llvm.org/PR25978
    cflags = [ "-Wno-unused-function" ]
  }
}

# libc++abi cannot be a component because that would add a circular
# dependency created from depending on //build/config:exe_and_shlib_deps
if (is_component_build) {
  link_target_type = "shared_library"
} else {
  link_target_type = "source_set"
}
target(link_target_type, "libc++abi") {
  sources = [
    "trunk/src/abort_message.cpp",
    "trunk/src/cxa_aux_runtime.cpp",
    "trunk/src/cxa_default_handlers.cpp",
    "trunk/src/cxa_demangle.cpp",
    "trunk/src/cxa_exception.cpp",
    "trunk/src/cxa_exception_storage.cpp",
    "trunk/src/cxa_guard.cpp",
    "trunk/src/cxa_handlers.cpp",

    # This file is supposed to be used in fno-exception builds of
    # libc++abi.  We build lib++/libc++abi with exceptions enabled.
    #"trunk/src/cxa_noexception.cpp",
    "trunk/src/cxa_personality.cpp",
    "trunk/src/cxa_thread_atexit.cpp",
    "trunk/src/cxa_unexpected.cpp",
    "trunk/src/cxa_vector.cpp",
    "trunk/src/cxa_virtual.cpp",
    "trunk/src/fallback_malloc.cpp",
    "trunk/src/private_typeinfo.cpp",
    "trunk/src/stdlib_exception.cpp",
    "trunk/src/stdlib_new_delete.cpp",
    "trunk/src/stdlib_stdexcept.cpp",
    "trunk/src/stdlib_typeinfo.cpp",
  ]
  configs -= [
    "//build/config/compiler:chromium_code",
    "//build/config/compiler:no_rtti",
    "//build/config/gcc:no_exceptions",
  ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/config/compiler:rtti",
    "//buildtools/third_party/libc++:config",

    # Must be after no_chromium_code.
    ":libc++abi_warnings",
  ]
}
